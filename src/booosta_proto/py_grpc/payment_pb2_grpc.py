# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from booosta_proto.py_grpc import payment_pb2 as payment__pb2


class PaymentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDVA = channel.unary_unary(
                '/payment.PaymentService/CreateDVA',
                request_serializer=payment__pb2.CreateDVARequest.SerializeToString,
                response_deserializer=payment__pb2.CreateDVAResponse.FromString,
                )
        self.ResolveAccountNumber = channel.unary_unary(
                '/payment.PaymentService/ResolveAccountNumber',
                request_serializer=payment__pb2.ResolveAccountNumberRequest.SerializeToString,
                response_deserializer=payment__pb2.ResolveAccountResponse.FromString,
                )
        self.VerifyBVN = channel.unary_unary(
                '/payment.PaymentService/VerifyBVN',
                request_serializer=payment__pb2.VerifyBVNRequest.SerializeToString,
                response_deserializer=payment__pb2.VerifyBVNResponse.FromString,
                )
        self.FetchCustomerDVA = channel.unary_unary(
                '/payment.PaymentService/FetchCustomerDVA',
                request_serializer=payment__pb2.FetchCustomerDVARequest.SerializeToString,
                response_deserializer=payment__pb2.FetchCustomerDVAResponse.FromString,
                )
        self.RequeryVDA = channel.unary_unary(
                '/payment.PaymentService/RequeryVDA',
                request_serializer=payment__pb2.RequeryVDARequest.SerializeToString,
                response_deserializer=payment__pb2.CreateDVAResponse.FromString,
                )


class PaymentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateDVA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveAccountNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyBVN(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchCustomerDVA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequeryVDA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDVA': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDVA,
                    request_deserializer=payment__pb2.CreateDVARequest.FromString,
                    response_serializer=payment__pb2.CreateDVAResponse.SerializeToString,
            ),
            'ResolveAccountNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveAccountNumber,
                    request_deserializer=payment__pb2.ResolveAccountNumberRequest.FromString,
                    response_serializer=payment__pb2.ResolveAccountResponse.SerializeToString,
            ),
            'VerifyBVN': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyBVN,
                    request_deserializer=payment__pb2.VerifyBVNRequest.FromString,
                    response_serializer=payment__pb2.VerifyBVNResponse.SerializeToString,
            ),
            'FetchCustomerDVA': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchCustomerDVA,
                    request_deserializer=payment__pb2.FetchCustomerDVARequest.FromString,
                    response_serializer=payment__pb2.FetchCustomerDVAResponse.SerializeToString,
            ),
            'RequeryVDA': grpc.unary_unary_rpc_method_handler(
                    servicer.RequeryVDA,
                    request_deserializer=payment__pb2.RequeryVDARequest.FromString,
                    response_serializer=payment__pb2.CreateDVAResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'payment.PaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateDVA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/payment.PaymentService/CreateDVA',
            payment__pb2.CreateDVARequest.SerializeToString,
            payment__pb2.CreateDVAResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveAccountNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/payment.PaymentService/ResolveAccountNumber',
            payment__pb2.ResolveAccountNumberRequest.SerializeToString,
            payment__pb2.ResolveAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyBVN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/payment.PaymentService/VerifyBVN',
            payment__pb2.VerifyBVNRequest.SerializeToString,
            payment__pb2.VerifyBVNResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchCustomerDVA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/payment.PaymentService/FetchCustomerDVA',
            payment__pb2.FetchCustomerDVARequest.SerializeToString,
            payment__pb2.FetchCustomerDVAResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequeryVDA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/payment.PaymentService/RequeryVDA',
            payment__pb2.RequeryVDARequest.SerializeToString,
            payment__pb2.CreateDVAResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
